#!/usr/bin/env pinpoint

[bg.jpg]
[font=Sans 50px]
[duration=5.000000]

-- 
¡Bienvenidos!

  Tryton 


-- [lukio.jpg]

¿Who am I?

 ❥ Luciano Rossi
 ❥ Software developer (libre)
    
   (https://github.com/lukio)
   (https://bitbucket.org/lukio)

-- [ayni.png]

 ❥ lukio
 ❥ Cooperativa de Trabajo

   (Video: http://gcoop.coop/codigos-cooperativos)

--

Plataforma de desarrollo de aplicaciones
de alto nivel Arquitectura de 3 Capas.

* GPLv3
* Cliente PyGtk / Cliente Web (sao)
  Ligero (No tiene logica de negocios)
* Servidor Python
* Postgresql / SQLite / MySQL

--
Objetivos de Tryton
 Consistencia
 Migración
 Modularidad
 Enfoque “Framework especializado”
 Paquetes Python → pip
 Code review

--
Proceso de liberación de versiones
 Ciclo de 6 meses
 5 releases mantenidas
 Servidor de tests

--
Servidor Python

 ORM
    Creación de esquema
    Migración automática
 Workflows
 Reportes (relatorio)
 Multi-lenguajes 

-- 

 Modelos
 Asistentes (Wizard)
 Vistas
 Reportes
 Workflow
 Extensión de otros módulos

--

Modelos

 Modelos
 Campos
 Valores por defecto
 Search – Create – Write – Delete
 Browse
 Vistas
 Estados

-- [modelo.png]
-- [campos.png]
-- [defecto.png]
-- [search.png]
-- [browse.png]
-- [vista1.png]
-- [vista2.png]
-- [estados.png]

--
Proteus

Librería para acceder a los modelos
 de Tryton como un cliente

CLI Python

-- [proteus.png]

--
flask_tryton

Construir tu sitio web sobre Flask, con Tryton como Backend

@app.route('/rest/v1/invoices/<record("account.invoice"):invoice>', methods=['POST'])
@auth.login_required
@tryton.transaction()
def get_report(invoice):
    "get report"

    InvoiceReport = tryton.pool.get('account.invoice', type='report')
    try:
        type_, file_data, print_, name = InvoiceReport.execute([invoice.id], {})
    except:
        abort(404, u'Nonexistent invoice')
    file_data_encode = base64.b64encode(str(file_data))
    data = {
        'invoice_id': invoice.id,
        'state': invoice.state,
        'report_name': name,
        'report_data': file_data_encode,
        'report_type': mimetypes.types_map['.'+type_],
        'report_ext': type_,
    }

    return jsonify({'data': data}), 200

--
galatea (flask_tryton)

Sitio web en Flask que utiliza a Tryton como backend para armar una tienda virtual

https://bitbucket.org/zikzakmedia/tryton_galatea

--
Contribuir en Tryton

Testear
Realizar codereview
Subir parches

--
¿Donde consultar?

Web: http://www.tryton.org/

IRC: #tryton y #tryton-es en irc.freenode.net

tryton-ar en Google Groups

-- [tryton-ar.jpg]

Tryton Argentina

    https://github.com/tryton-ar

    account_ar: Plan de cuentas de para empresas Argentinas.
    account_coop_ar: Plan de cuentas para cooperativas de Trabajo.
    party_ar: Integracion del padron AFIP.
    account_invoice ar: Facturación integrada con ws de la AFIP.
    account_check_ar: Manejo de cheques
    account_voucher_ar: Comprobantes de pago.
    account_retencion_ar: Retenciones
    bank_ar: Incorpora los datos de bancos de Argentina.
    cooperative_ar: Gestion de Cooperativa (Recibos, Vacaciones, Socios, etc)
    subdiario: Reportes que generan el subdiario
    citi_afip: Informativo de Compras y Ventas

-- [preguntas.png] [font=Sans 100px] [transition=spin-text]
